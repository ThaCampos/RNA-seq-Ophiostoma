"0","for (i in 1:nrow(sft$fitIndices)) {"
"0","	if (-sign(sft$fitIndices[i, 3]) * sft$fitIndices[i, 2] > 0.85) {"
"0","		power_ = sft$fitIndices$Power[i]"
"0","		break"
"0","	} else {"
"0","		next"
"0","	}"
"0","}"
"0",""
"0","for(i in 1:ncol(degs_norm)){"
"0","	degs_norm[,i] <- as.numeric(degs_norm[,i])"
"0","}"
"0","cor <- WGCNA::cor"
"0","net <- blockwiseModules(degs_norm, power = power_,"
"0","												TOMType = ""unsigned"","
"0","												numericLabels = TRUE, verbose = 3)"
"1"," Calculating module eigengenes block-wise from all genes"
"1","
"
"1","   Flagging genes and samples with too many missing values..."
"1","
"
"1","    ..step 1"
"1","
"
"1"," ..Working on block 1 ."
"1","
"
"1","    TOM calculation: adjacency..
"
"1","    ..will not use multithreading.
"
"1","     Fraction of slow calculations: 0.000000
"
"1","    ..connectivity..
"
"1","    ..matrix multiplication (system BLAS)..
"
"1","    ..normalization..
"
"1","    ..done.
"
"1"," ....clustering.."
"1","
"
"1"," ....detecting modules.."
"1","
"
"1"," ....calculating module eigengenes.."
"1","
"
"1"," ....checking kME in modules.."
"1","
"
"1","     ..removing 23 genes from module 1 because their KME is too low."
"1","
"
"1","     ..removing 7 genes from module 2 because their KME is too low."
"1","
"
"1"," ..merging modules that are too close.."
"1","
"
"1","     mergeCloseModules: Merging modules whose distance is less than 0.15"
"1","
"
"1","       Calculating new MEs..."
"1","
"
